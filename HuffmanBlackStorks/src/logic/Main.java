package logic;

import java.awt.EventQueue;

import gui.Frame;

public class Main {

	public static void main(String[] args) {// kakaeto ebala
		showGUI();		
	}

	public static void showGUI() {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Frame window = new Frame();
					window.getFrame().setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}
}

//System.out.println(Frame.toARGB("0110"));

/*
 * System.out.println(RLE.compressPicture(
 * "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
 * )); System.out.println(RLE.compress(
 * "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
 * )); System.out.println(RLE.decompressPicture("0|256"));
 * System.out.println(RLE.decompress("2561"));
 */

/*
 * String s = "111100001010101"; String newS = RLE.compressPicture(s);
 * System.out.println("new: " + newS); String oldS =
 * RLE.decompressPicture(newS); System.out.println("original: " + oldS);
 * System.out.println(s.equals(oldS));
 */

/*
 * String s = "TTTTTAAABBBBB4545aadd"; String newS = RLE.compress(s);
 * System.out.println("new: " + newS); String oldS = RLE.decompress(newS);
 * System.out.println("original: " + oldS); System.out.println(s.equals(oldS));
 */

/*
 * String original = decompress(
 * "110110010011011111111011111001110101100111111110100110100000010101011110010110100010100111000000010111001110011101001110000000101110000101011110111010111110011101011110000010010010111111110110110100010100111110100001110110100110111111110100110100000010101011100100011001101110101010111001001110100010100111000000010110101001110001110010111001010{C=01000,.\r\n"
 * +
 * "=1001010,.T=1101100,. =111,.a=1100,.b=1101101,.c=0011,.d=01001,.e=0111,.f=001000,.g=001001,.(=1001011,.h=10011,.)=001010,.i=101,.k=01010,.l=01011,.m=1101110,.n=0000,..=001011,.o=1000,.r=0001,.s=11010,.t=0110,.w=1101111,.y=100100}"
 * ); System.out.println(original); returnTree(
 * "110110010011011111111011111001110101100111111110100110100000010101011110010110100010100111000000010111001110011101001110000000101110000101011110111010111110011101011110000010010010111111110110110100010100111110100001110110100110111111110100110100000010101011100100011001101110101010111001001110100010100111000000010110101001110001110010111001010{C=01000,.\r\n"
 * +
 * "=1001010,.T=1101100,. =111,.a=1100,.b=1101101,.c=0011,.d=01001,.e=0111,.f=001000,.g=001001,.(=1001011,.h=10011,.)=001010,.i=101,.k=01010,.l=01011,.m=1101110,.n=0000,..=001011,.o=1000,.r=0001,.s=11010,.t=0110,.w=1101111,.y=100100}"
 * ); System.out.println(
 * hexToBin("D937FBE759FE9A055E5A29C05CE74E02E15EEBE75E092FF6D14FA1DA6FF4D02AE466EAB93A29C05A9C72E500 | {C=01000, \r\n=1001010, T=1101100,  =111, a=1100, b=1101101, c=0011, d=01001, e=0111, f=001000, g=001001, (=1001011, h=10011, )=001010, i=101, k=01010, l=01011, m=1101110, n=0000, .=001011, o=1000, r=0001, s=11010, t=0110, w=1101111, y=100100}"
 * ));
 * compress("The white stork (Ciconia ciconia) is a large bird in the stork family Ciconiidae."
 * );
 */
